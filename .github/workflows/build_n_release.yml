name: Build & Release
run-name: ${{ github.actor }} is running a 'build_n_release' workflow

on:
 push:
   branches:
     - master
   tags:
     - "*"

jobs:
  build:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
    - run: echo "🎫 A new tag has been created! And a new job has been started too."
    - run: echo "🐧 This job is running on a ${{ runner.os }} server hosted by GitHub!"
    - uses: actions/checkout@v3
    - run: echo "💡 The ${{ github.repository }} repository has been cloned."
    - run: echo "Setting up JDK" 
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - run: echo "🖥️ The workflow is now ready to test your code."
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
    - run: echo "🐛 Building Debug APK."
    - run: ./gradlew assembleDebug
    - run: echo "Build status report=${{ job.status }}."
    - name: Upload APK
      uses: actions/upload-artifact@v1
      with:
        name: apk
        path: app/build/outputs/apk/debug/app-debug.apk
        
  release:
   name: Release APK
   needs: build
   runs-on: ubuntu-latest
   steps:
     - run: echo "👾 Time to create the release!"
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: apk
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.run_number }}
         release_name: ${{ github.event.repository.name }} v${{ github.run_number }}
     - run: echo "✅ APK is release for upload."    
     - name: Upload Release APK
       id: upload_release_asset
       uses: actions/upload-release-asset@v1.0.1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: apk/app-debug.apk
         asset_name: ${{ github.event.repository.name }}.apk
         asset_content_type: application/zip
     - run: echo "Upload returned with status=${{ job.status }}." 
    
